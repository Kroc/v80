;v80 test file
;
:w	.w $1234 $5678 :b
:b	.b $1 $2 $34 <:w

#true	$1			; define constant
#true	#true - $1		; redefine constant

; a hexadecimal number first on the line
; sets the virtual program-counter
;
$0000


;labels can start with numbers and are
;limited to 31 chars, including the sigil
;
:234567890123456789012345678901

; start the line with `$` to set the virtual program-counter
; using en expression. be aware that forward-references to
; labels cannot be used when setting the program-counter
;
$	$ + $0100

	; v80			; z80
:adc	adc*hl			; adc	A,	[HL]
	adc*ix	$aa		; adc	A,	[IX+$aa]
	adc*iy	$aa		; adc	A,	[IY+$aa]
	adc	$aa		; adc	A,	$aa
	adc.a			; adc	A,	A
	adc.b			; adc	A,	B
	adc.c			; adc	A,	C
	adc.d			; adc	A,	D
	adc.e			; adc	A,	E
	adc.h			; adc	A,	H
	adc.l			; adc	A,	L
	adc.ixl			; adc	A,	IXY
	adc.ixh			; adc	A,	IXH
	adc.iyl			; adc	A,	IYL
	adc.iyh			; adc	A,	IYH
	adc.hl+bc		; adc	HL,	BC
	adc.hl+de		; adc	HL,	DE
	adc.hl+hl		; adc	HL,	HL
	adc.hl+sp		; adc	HL,	SP

:add	add*hl			; add	A,	[HL]
	add*ix	$aa		; add	A,	[IX+$aa]
	add*iy	$aa		; add	A,	[IY+$aa]
	add	$aa		; add	A,	$aa
	add.a			; add	A,	A
	add.b			; add	A,	B
	add.c			; add	A,	C
	add.d			; add	A,	D
	add.e			; add	A,	E
	add.h			; add	A,	H
	add.l			; add	A,	L
	add.ixl			; add	A,	IXY
	add.ixh			; add	A,	IXH
	add.iyl			; add	A,	IYL
	add.iyh			; add	A,	IYH
	add.hl+bc		; add	HL,	BC
	add.hl+de		; add	HL,	DE
	add.hl+hl		; add	HL,	HL
	add.hl+sp		; add	HL,	SP
	add.ix+bc		; add	IX,	BC
	add.ix+de		; add	IX,	DE
	add.ix+ix		; add	IX,	IX
	add.ix+sp		; add	IX,	SP
	add.iy+bc		; add	IY,	BC
	add.iy+de		; add	IY,	DE
	add.iy+iy		; add	IY,	IY
	add.iy+sp		; add	IY,	SP

:and	and*hl			; and	A,	[HL]
	and*ix	$aa		; and	A,	[IX+$aa]
	and*iy	$aa		; and	A,	[IY+$aa]
	and	$aa		; and	A,	$aa
	and.a			; and	A,	A
	and.b			; and	A,	B
	and.c			; and	A,	C
	and.d			; and	A,	D
	and.e			; and	A,	E
	and.h			; and	A,	H
	and.l			; and	A,	L
	and.ixl			; and	A,	IXL
	and.ixh			; and	A,	IXH
	and.iyl			; and	A,	IYL
	and.iyh			; and	A,	IYH

:bit	bit0*hl			; bit	0,	[HL]
	bit0*ix	$aa		; bit	0,	[IX+$aa]
	bit0*iy	$aa		; bit	0,	[IY+$aa]
	bit0.a			; bit	0,	A
	bit0.b			; bit	0,	B
	bit0.c			; bit	0,	C
	bit0.d			; bit	0,	D
	bit0.e			; bit	0,	E
	bit0.h			; bit	0,	H
	bit0.l			; bit	0,	L
	bit1*hl			; bit	1,	[HL]
	bit1*ix	$aa		; bit	1,	[IX+$aa]
	bit1*iy	$aa		; bit	1,	[IY+$aa]
	bit1.a			; bit	1,	A
	bit1.b			; bit	1,	B
	bit1.c			; bit	1,	C
	bit1.d			; bit	1,	D
	bit1.e			; bit	1,	E
	bit1.h			; bit	1,	H
	bit1.l			; bit	1,	L
	bit2*hl			; bit	2,	[HL]
	bit2*ix	$aa		; bit	2,	[IX+$aa]
	bit2*iy	$aa		; bit	2,	[IY+$aa]
	bit2.a			; bit	2,	A
	bit2.b			; bit	2,	B
	bit2.c			; bit	2,	C
	bit2.d			; bit	2,	D
	bit2.e			; bit	2,	E
	bit2.h			; bit	2,	H
	bit2.l			; bit	2,	L
	bit3*hl			; bit	3,	[HL]
	bit3*ix	$aa		; bit	3,	[IX+$aa]
	bit3*iy	$aa		; bit	3,	[IY+$aa]
	bit3.a			; bit	3,	A
	bit3.b			; bit	3,	B
	bit3.c			; bit	3,	C
	bit3.d			; bit	3,	D
	bit3.e			; bit	3,	E
	bit3.h			; bit	3,	H
	bit3.l			; bit	3,	L
	bit4*hl			; bit	4,	[HL]
	bit4*ix	$aa		; bit	4,	[IX+$aa]
	bit4*iy	$aa		; bit	4,	[IY+$aa]
	bit4.a			; bit	4,	A
	bit4.b			; bit	4,	B
	bit4.c			; bit	4,	C
	bit4.d			; bit	4,	D
	bit4.e			; bit	4,	E
	bit4.h			; bit	4,	H
	bit4.l			; bit	4,	L
	bit5*hl			; bit	5,	[HL]
	bit5*ix	$aa		; bit	5,	[IX+$aa]
	bit5*iy	$aa		; bit	5,	[IY+$aa]
	bit5.a			; bit	5,	A
	bit5.b			; bit	5,	B
	bit5.c			; bit	5,	C
	bit5.d			; bit	5,	D
	bit5.e			; bit	5,	E
	bit5.h			; bit	5,	H
	bit5.l			; bit	5,	L
	bit6*hl			; bit	6,	[HL]
	bit6*ix	$aa		; bit	6,	[IX+$aa]
	bit6*iy	$aa		; bit	6,	[IY+$aa]
	bit6.a			; bit	6,	A
	bit6.b			; bit	6,	B
	bit6.c			; bit	6,	C
	bit6.d			; bit	6,	D
	bit6.e			; bit	6,	E
	bit6.h			; bit	6,	H
	bit6.l			; bit	6,	L
	bit7*hl			; bit	7,	[HL]
	bit7*ix	$aa		; bit	7,	[IX+$aa]
	bit7*iy	$aa		; bit	7,	[IY+$aa]
	bit7.a			; bit	7,	A
	bit7.b			; bit	7,	B
	bit7.c			; bit	7,	C
	bit7.d			; bit	7,	D
	bit7.e			; bit	7,	E
	bit7.h			; bit	7,	H
	bit7.l			; bit	7,	L

:call	call	$		; call	$1234
	call?z	$		; call	z,	$1234
	call?c	$		; call	c,	$1234
	call?m	$		; call	m,	$1234
	call?p	$		; call	p,	$1234
	call?po	$		; call	po,	$1234
	call?pe	$		; call	pe,	$1234
	call?nz	$		; call	nz,	$1234
	call?nc	$		; call	nz,	$1234

:ccf	ccf			; ccf

:cp	cp*hl			; cp	A,	[HL]
	cp*ix	$aa		; cp	A,	[IX+$aa]
	cp*iy	$aa		; cp	A,	[IY+$aa]
	cp	$aa		; cp	A,	$aa
	cp.a			; cp	A,	A
	cp.b			; cp	A,	B
	cp.c			; cp	A,	C
	cp.d			; cp	A,	D
	cp.e			; cp	A,	E
	cp.h			; cp	A,	H
	cp.l			; cp	A,	L
	cp.ixl			; cp	A,	IXL
	cp.ixh			; cp	A,	IXH
	cp.iyl			; cp	A,	IYL
	cp.iyh			; cp	A,	IYH

:cpd	cpd			; cpd
	cpdr			; cpdr

:cpi	cpi			; cpi
	cpir			; cpir

:cpl	cpl			; cpl

:daa	daa			; daa

:dec	dec*hl			; dec	[HL]
	dec*ix	$aa		; dec	[IX+$aa]
	dec*iy	$aa		; dec	[IY+$aa]
	dec.a			; dec	A
	dec.b			; dec	B
	dec.c			; dec	C
	dec.d			; dec	D
	dec.e			; dec	E
	dec.h			; dec	H
	dec.l			; dec	L
	dec.ixl			; dec	IXL
	dec.ixh			; dec	IXH
	dec.iyl			; dec	IYL
	dec.iyh			; dec	IYH
	dec.bc			; dec	BC
	dec.de			; dec	DE
	dec.hl			; dec	HL
	dec.ix			; dec	IX
	dec.iy			; dec	IY
	dec.sp			; dec	SP

:di	di			; di

:djnz	djnz	$		; djnz	$1234

:ei	ei			; ei

:ex	ex*sp.hl		; ex	[SP],	HL
	ex*sp.ix		; ex	[SP],	IX
	ex*sp.iy		; ex	[SP],	IY
	ex.af.af		; ex	AF,	AF
	ex.de.hl		; ex	DE,	HL
	exx			; exx

:halt	halt			; halt

:im	im0			; im	0
	im1			; im	1
	im2			; im	2

:in	in.a*	$aa		; in	A,	[$aa]
	in.a*c			; in	A,	[C]
	in.b*c			; in	B,	[C]
	in.c*c			; in	C,	[C]
	in.d*c			; in	D,	[C]
	in.e*c			; in	E,	[C]
	in.h*c			; in	H,	[C]
	in.l*c			; in	L,	[C]

:inc	inc*hl			; inc	[HL]
	inc*ix	$aa		; inc	[IX+$aa]
	inc*iy	$aa		; inc	[IY+$aa]
	inc.a			; inc	A
	inc.b			; inc	B
	inc.c			; inc	C
	inc.d			; inc	D
	inc.e			; inc	E
	inc.h			; inc	H
	inc.l			; inc	L
	inc.ixl			; inc	IXL
	inc.ixh			; inc	IXH
	inc.iyl			; inc	IYL
	inc.iyh			; inc	IYH
	inc.bc			; inc	BC
	inc.de			; inc	DE
	inc.hl			; inc	HL
	inc.sp			; inc	SP
	inc.ix			; inc	IX
	inc.iy			; inc	IY

:ind	ind			; ind
	indr			; indr

:ini	ini			; ini
	inir			; inir

:jp	jp	$		; jp	$1234
	jp*hl			; jp	[HL]
	jp*ix			; jp	[IX]
	jp*iy			; jp	[IY]
	jp?c	$		; jp	c,	$
	jp?m	$		; jp	m,	$
	jp?nc	$		; jp	nc,	$
	jp?nz	$		; jp	nz,	$
	jp?p	$		; jp	p,	$
	jp?pe	$		; jp	pe,	$
	jp?po	$		; jp	po,	$
	jp?z	$		; jp	z,	$

:jr	jr	$		; jr	$
	jr?c	$		; jr	c,	$
	jr?nc	$		; jr	nc,	$
	jr?nz	$		; jr	nz,	$
	jr?z	$		; jr	z,	$

:ld	ld*bc.a			; ld	[BC],	A
	ld*de.a			; ld	[DE],	A
	ld*hl	$aa		; ld	[HL],	$aa
	ld*hl.a			; ld	[HL],	A
	ld*hl.b			; ld	[HL],	B
	ld*hl.c			; ld	[HL],	C
	ld*hl.d			; ld	[HL],	D
	ld*hl.e			; ld	[HL],	E
	ld*hl.h			; ld	[HL],	H
	ld*hl.l			; ld	[HL],	L
	ld*ix	$aa	$bb	; ld	[IX+$aa],	$bb
	ld*ix.a	$aa		; ld	[IX+$aa],	A
	ld*ix.b	$aa		; ld	[IX+$aa],	B
	ld*ix.c	$aa		; ld	[IX+$aa],	C
	ld*ix.d	$aa		; ld	[IX+$aa],	D
	ld*ix.e	$aa		; ld	[IX+$aa],	E
	ld*ix.h	$aa		; ld	[IX+$aa],	H
	ld*ix.l	$aa		; ld	[IX+$aa],	L
	ld*iy	$aa	$bb	; ld	[IY+$aa],	$bb
	ld*iy.a	$aa		; ld	[IY+$aa],	A
	ld*iy.b	$aa		; ld	[IY+$aa],	B
	ld*iy.c	$aa		; ld	[IY+$aa],	C
	ld*iy.d	$aa		; ld	[IY+$aa],	D
	ld*iy.e	$aa		; ld	[IY+$aa],	E
	ld*iy.h	$aa		; ld	[IY+$aa],	H
	ld*iy.l	$aa		; ld	[IY+$aa],	L
	ld*.a	$		; ld	[$1234],	A
	ld*.bc	$		; ld	[$1234],	BC
	ld*.de	$		; ld	[$1234],	DE
	ld*.hl	$		; ld	[$1234],	HL
	ld*.ix	$		; ld	[$1234],	IX
	ld*.iy	$		; ld	[$1234],	IY
	ld*.sp	$		; ld	[$1234],	SP

	ld.bc*	$		; ld	BC,	[$1234]
	ld.bc	$		; ld	BC,	$1234
	ld.de*	$		; ld	DE,	[$1234]
	ld.de	$		; ld	DE,	$1234
	ld.hl*	$		; ld	HL,	[$1234]
	ld.hl	$		; ld	HL,	$1234
	ld.ix*	$		; ld	IX,	[$1234]
	ld.ix	$		; ld	IX,	$1234
	ld.iy*	$		; ld	IY,	[$1234]
	ld.iy	$		; ld	IY,	$1234
	ld.sp*	$		; ld	SP,	[$1234]
	ld.sp.hl		; ld	SP,	HL
	ld.sp.ix		; ld	SP,	IX
	ld.sp.iy		; ld	SP,	IY
	ld.sp	$		; ld	SP,	$1234

	ld.a*bc			; ld	A,	[BC]
	ld.a*de			; ld	A,	[DE]
	ld.a*hl			; ld	A,	[HL]
	ld.a*ix	$aa		; ld	A,	[IX+$aa]
	ld.a*iy	$aa		; ld	A,	[IY+$aa]
	ld.a*	$		; ld	A,	[$1234]
	ld.a	$aa		; ld	A,	$aa
	ld.a.a			; ld	A,	A
	ld.a.b			; ld	A,	B
	ld.a.c			; ld	A,	C
	ld.a.d			; ld	A,	D
	ld.a.e			; ld	A,	E
	ld.a.h			; ld	A,	H
	ld.a.l			; ld	A,	L
	ld.a.ixl		; ld	A,	IXL
	ld.a.ixh		; ld	A,	IXH
	ld.a.iyl		; ld	A,	IYL
	ld.a.iyh		; ld	A,	IYH
	ld.a.i			; ld	A,	I
	ld.a.r			; ld	A,	R

	ld.b*hl			; ld	B,	[HL]
	ld.b*ix	$aa		; ld	B,	[IX+$aa]
	ld.b*iy	$aa		; ld	B,	[IY+$aa]
	ld.b	$aa		; ld	B,	$aa
	ld.b.a			; ld	B,	A
	ld.b.b			; ld	B,	B
	ld.b.c			; ld	B,	C
	ld.b.d			; ld	B,	D
	ld.b.e			; ld	B,	E
	ld.b.h			; ld	B,	H
	ld.b.l			; ld	B,	L
	ld.b.ixl		; ld	B,	IXL
	ld.b.ixh		; ld	B,	IXH
	ld.b.iyl		; ld	B,	IYL
	ld.b.iyh		; ld	B,	IYH

	ld.c*hl			; ld	C,	[HL]
	ld.c*ix	$aa		; ld	C,	[IX+$aa]
	ld.c*iy	$aa		; ld	C,	[IY+$aa]
	ld.c	$aa		; ld	C,	$aa
	ld.c.a			; ld	C,	A
	ld.c.b			; ld	C,	B
	ld.c.c			; ld	C,	C
	ld.c.d			; ld	C,	D
	ld.c.e			; ld	C,	E
	ld.c.h			; ld	C,	H
	ld.c.l			; ld	C,	L
	ld.c.ixl		; ld	C,	IXL
	ld.c.ixh		; ld	C,	IXH
	ld.c.iyl		; ld	C,	IYL
	ld.c.iyh		; ld	C,	IYH

	ld.d*hl			; ld	D,	[HL]
	ld.d*ix	$aa		; ld	D,	[IX+$aa]
	ld.d*iy	$aa		; ld	D,	[IY+$aa]
	ld.d	$aa		; ld	D,	$aa
	ld.d.a			; ld	D,	A
	ld.d.b			; ld	D,	B
	ld.d.c			; ld	D,	C
	ld.d.d			; ld	D,	D
	ld.d.e			; ld	D,	E
	ld.d.h			; ld	D,	H
	ld.d.l			; ld	D,	L
	ld.d.ixl		; ld	D,	IXL
	ld.d.ixh		; ld	D,	IXH
	ld.d.iyl		; ld	D,	IYL
	ld.d.iyh		; ld	D,	IYH

	ld.e*hl			; ld	E,	[HL]
	ld.e*ix	$aa		; ld	E,	[IX+$aa]
	ld.e*iy	$aa		; ld	E,	[IY+$aa]
	ld.e	$aa		; ld	E,	$aa
	ld.e.a			; ld	E,	A
	ld.e.b			; ld	E,	B
	ld.e.c			; ld	E,	C
	ld.e.d			; ld	E,	D
	ld.e.e			; ld	E,	E
	ld.e.h			; ld	E,	H
	ld.e.l			; ld	E,	L
	ld.e.ixl		; ld	E,	IXL
	ld.e.ixh		; ld	E,	IXH
	ld.e.iyl		; ld	E,	IYL
	ld.e.iyh		; ld	E,	IYH

	ld.h*hl			; ld	H,	[HL]
	ld.h*ix	$aa		; ld	H,	[IX+$aa]
	ld.h*iy	$aa		; ld	H,	[IY+$aa]
	ld.h	$aa		; ld	H,	$aa
	ld.h.a			; ld	H,	A
	ld.h.b			; ld	H,	B
	ld.h.c			; ld	H,	C
	ld.h.d			; ld	H,	D
	ld.h.e			; ld	H,	E
	ld.h.h			; ld	H,	H
	ld.h.l			; ld	H,	L
	ld.h.ixl		; ld	H,	IXL
	ld.h.ixh		; ld	H,	IXH
	ld.h.iyl		; ld	H,	IYL
	ld.h.iyh		; ld	H,	IYH

	ld.l*hl			; ld	L,	[HL]
	ld.l*ix	$aa		; ld	L,	[IX+$aa]
	ld.l*iy	$aa		; ld	L,	[IY+$aa]
	ld.l	$aa		; ld	L,	$aa
	ld.l.a			; ld	L,	A
	ld.l.b			; ld	L,	B
	ld.l.c			; ld	L,	C
	ld.l.d			; ld	L,	D
	ld.l.e			; ld	L,	E
	ld.l.h			; ld	L,	H
	ld.l.l			; ld	L,	L
	ld.l.ixl		; ld	L,	IXL
	ld.l.ixh		;@ld_ix ld	L,	IXH
	ld.l.iyl		; ld	L,	IYL
	ld.l.iyh		; ld	L,	IYH

	ld.ixh	$aa		; ld	IXH,	$aa
	ld.ixh.a		; ld	IXH,	A
	ld.ixh.b		; ld	IXH,	B
	ld.ixh.c		; ld	IXH,	C
	ld.ixh.d		; ld	IXH,	D
	ld.ixh.e		; ld	IXH,	E
	ld.ixh.ixh		; ld	IXH,	IXH
	ld.ixh.ixl		; ld	IXH,	IXL
	ld.ixl	$aa		; ld	IXL,	$aa
	ld.ixl.a		; ld	IXL,	A
	ld.ixl.b		; ld	IXL,	B
	ld.ixl.c		; ld	IXL,	C
	ld.ixl.d		; ld	IXL,	D
	ld.ixl.e		; ld	IXL,	E
	ld.ixl.ixh		; ld	IXL,	IXH
	ld.ixl.ixl		; ld	IXL,	IXL

	ld.iyh	$aa		; ld	IYH,	$aa
	ld.iyh.a		; ld	IYH,	A
	ld.iyh.b		; ld	IYH,	B
	ld.iyh.c		; ld	IYH,	C
	ld.iyh.d		; ld	IYH,	D
	ld.iyh.e		; ld	IYH,	E
	ld.iyh.iyh		; ld	IYH,	IYH
	ld.iyh.iyl		; ld	IYH,	IYL
	ld.iyl	$aa		; ld	IYL,	$aa
	ld.iyl.a		; ld	IYL,	A
	ld.iyl.b		; ld	IYL,	B
	ld.iyl.c		; ld	IYL,	C
	ld.iyl.d		; ld	IYL,	D
	ld.iyl.e		; ld	IYL,	E
	ld.iyl.iyh		; ld	IYL,	IYH
	ld.iyl.iyl		; ld	IYL,	IYL

	ld.i.a			; ld	I,	A
	ld.r.a			; ld	R,	A

:ldd	ldd			; ldd
	lddr			; lddr

:ldi	ldi			; ldi
	ldir			; ldir

:neg	neg			; neg

:nop	nop			; nop

:or	or*hl			; or	A,	[HL]
	or*ix	$aa		; or	A,	[IX+$aa]
	or*iy	$aa		; or	A,	[IX+$aa]
	or	$aa		; or	A,	$aa
	or.a			; or	A,	A
	or.b			; or	A,	B
	or.c			; or	A,	C
	or.d			; or	A,	D
	or.e			; or	A,	E
	or.h			; or	A,	H
	or.l			; or	A,	L
	or.ixh			; or	A,	IXH
	or.ixl			; or	A,	IXL
	or.iyh			; or	A,	IYH
	or.iyl			; or	A,	IYL

:out	out*.a	$aa		; out	[$aa],	A
	out*c.a			; out	[C],	A
	out*c.b			; out	[C],	B
	out*c.c			; out	[C],	C
	out*c.d			; out	[C],	D
	out*c.e			; out	[C],	E
	out*c.h			; out	[C],	H
	out*c.l			; out	[C],	L

:outd	outd			; outd
	otdr			; otdr

:outi	outi			; outi
	otir			; otir

:push	push.af			; push	AF
	push.bc			; push	BC
	push.de			; push	DE
	push.hl			; push	HL
	push.ix			; push	IX
	push.iy			; push	IY

:pop	pop.af			; pop	AF
	pop.bc			; pop	BC
	pop.de			; pop	DE
	pop.hl			; pop	HL
	pop.ix			; pop	IX
	pop.iy			; pop	IY

:res	res0*hl			; res	0,	[HL]
	res0*ix	$aa		; res	0,	[IX+$aa]
	res0*iy	$aa		; res	0,	[IY+$aa]
	res0.a			; res	0,	A
	res0.b			; res	0,	B
	res0.c			; res	0,	C
	res0.d			; res	0,	D
	res0.e			; res	0,	E
	res0.h			; res	0,	H
	res0.l			; res	0,	L
	res1*hl			; res	1,	[HL]
	res1*ix	$aa		; res	1,	[IX+$aa]
	res1*iy	$aa		; res	1,	[IY+$aa]
	res1.a			; res	1,	A
	res1.b			; res	1,	B
	res1.c			; res	1,	C
	res1.d			; res	1,	D
	res1.e			; res	1,	E
	res1.h			; res	1,	H
	res1.l			; res	1,	L
	res2*hl			; res	2,	[HL]
	res2*ix	$aa		; res	2,	[IX+$aa]
	res2*iy	$aa		; res	2,	[IY+$aa]
	res2.a			; res	2,	A
	res2.b			; res	2,	B
	res2.c			; res	2,	C
	res2.d			; res	2,	D
	res2.e			; res	2,	E
	res2.h			; res	2,	H
	res2.l			; res	2,	L
	res3*hl			; res	3,	[HL]
	res3*ix	$aa		; res	3,	[IX+$aa]
	res3*iy	$aa		; res	3,	[IY+$aa]
	res3.a			; res	3,	A
	res3.b			; res	3,	B
	res3.c			; res	3,	C
	res3.d			; res	3,	D
	res3.e			; res	3,	E
	res3.h			; res	3,	H
	res3.l			; res	3,	L
	res4*hl			; res	4,	[HL]
	res4*ix	$aa		; res	4,	[IX+$aa]
	res4*iy	$aa		; res	4,	[IY+$aa]
	res4.a			; res	4,	A
	res4.b			; res	4,	B
	res4.c			; res	4,	C
	res4.d			; res	4,	D
	res4.e			; res	4,	E
	res4.h			; res	4,	H
	res4.l			; res	4,	L
	res5*hl			; res	5,	[HL]
	res5*ix	$aa		; res	5,	[IX+$aa]
	res5*iy	$aa		; res	5,	[IY+$aa]
	res5.a			; res	5,	A
	res5.b			; res	5,	B
	res5.c			; res	5,	C
	res5.d			; res	5,	D
	res5.e			; res	5,	E
	res5.h			; res	5,	H
	res5.l			; res	5,	L
	res6*hl			; res	6,	[HL]
	res6*ix	$aa		; res	6,	[IX+$aa]
	res6*iy	$aa		; res	6,	[IY+$aa]
	res6.a			; res	6,	A
	res6.b			; res	6,	B
	res6.c			; res	6,	C
	res6.d			; res	6,	D
	res6.e			; res	6,	E
	res6.h			; res	6,	H
	res6.l			; res	6,	L
	res7*hl			; res	7,	[HL]
	res7*ix	$aa		; res	7,	[IX+$aa]
	res7*iy	$aa		; res	7,	[IY+$aa]
	res7.a			; res	7,	A
	res7.b			; res	7,	B
	res7.c			; res	7,	C
	res7.d			; res	7,	D
	res7.e			; res	7,	E
	res7.h			; res	7,	H
	res7.l			; res	7,	L

:ret	ret			; ret
	ret?c			; ret	c
	ret?m			; ret	m
	ret?nc			; ret	nc
	ret?nz			; ret	nz
	ret?p			; ret	p
	ret?pe			; ret	pe
	ret?po			; ret	po
	ret?z			; ret	z
	reti			; reti
	retn			; retn

:rl	rl*hl			; rl	[HL]
	rl*ix	$aa		; rl	[IX+$aa]
	rl*iy	$aa		; rl	[IY+$aa]
	rl.a			; rl.a
	rl.b			; rl.b
	rl.c			; rl.c
	rl.d			; rl.d
	rl.e			; rl.e
	rl.h			; rl.h
	rl.l			; rl.l
	rla			; rla
	rlc*hl			; rlc	[HL]
	rlc*ix	$aa		; rlc	[IX+$aa]
	rlc*iy	$aa		; rlc	[IY+$aa]
	rlc.a			; rlc	A
	rlc.b			; rlc	B
	rlc.c			; rlc	C
	rlc.d			; rlc	D
	rlc.e			; rlc	E
	rlc.h			; rlc	H
	rlc.l			; rlc	L
	rlca			; rlca
	rld			; rld

:rr	rr*hl			; rr	[HL]
	rr*ix	$aa		; rr	[IX+$aa]
	rr.a			; rr	A
	rr.b			; rr	B
	rr.c			; rr	C
	rr.d			; rr	D
	rr.e			; rr	E
	rr.h			; rr	H
	rr.l			; rr	L
	rra			; rra
	rrc*hl			; rrc	[HL]
	rrc*ix	$aa		; rrc	[IX+$aa]
	rrc*iy	$aa		; rrc	[IY+$aa]
	rrc.a			; rrc	A
	rrc.b			; rrc	B
	rrc.c			; rrc	C
	rrc.d			; rrc	D
	rrc.e			; rrc	E
	rrc.h			; rrc	H
	rrc.l			; rrc	L
	rrca			; rrca
	rrd			; rrd

:rst	rst0			; rst	$00
	rst8			; rst	$08
	rst10			; rst	$10
	rst18			; rst	$18
	rst20			; rst	$20
	rst28			; rst	$28
	rst30			; rst	$30
	rst38			; rst	$38

:sbc	sbc*hl			; sbc	A,	[HL]
	sbc*ix	$aa		; sbc	A,	[iX+$aa]
	sbc	$aa		; sbc	A,	$aa
	sbc.a			; sbc	A,	A
	sbc.b			; sbc	A,	B
	sbc.c			; sbc	A,	C
	sbc.d			; sbc	A,	D
	sbc.e			; sbc	A,	E
	sbc.h			; sbc	A,	H
	sbc.l			; sbc	A,	L
	sbc.ixh			; sbc	A,	IXH
	sbc.ixl			; sbc	A,	IXL
	sbc.iyh			; sbc	A,	IYH
	sbc.iyl			; sbc	A,	IYL
	sbc.hl.bc		; sbc	HL,	BC
	sbc.hl.de		; sbc	HL,	DE
	sbc.hl.hl		; sbc	HL,	HL
	sbc.hl.sp		; sbc	HL,	SP

:scf	scf			; scf

:set	set0*hl			; set	0,	[HL]
	set0*ix	$aa		; set	0,	[IX+$aa]
	set0*iy	$aa		; set	0,	[IY+$aa]
	set0.a			; set	0,	A
	set0.b			; set	0,	B
	set0.c			; set	0,	C
	set0.d			; set	0,	D
	set0.e			; set	0,	E
	set0.h			; set	0,	H
	set0.l			; set	0,	L
	set1*hl			; set	1,	[HL]
	set1*ix	$aa		; set	1,	[IX+$aa]
	set1*iy	$aa		; set	1,	[IY+$aa]
	set1.a			; set	1,	A
	set1.b			; set	1,	B
	set1.c			; set	1,	C
	set1.d			; set	1,	D
	set1.e			; set	1,	E
	set1.h			; set	1,	H
	set1.l			; set	1,	L
	set2*hl			; set	2,	[HL]
	set2*ix	$aa		; set	2,	[IX+$aa]
	set2*iy	$aa		; set	2,	[IY+$aa]
	set2.a			; set	2,	A
	set2.b			; set	2,	B
	set2.c			; set	2,	C
	set2.d			; set	2,	D
	set2.e			; set	2,	E
	set2.h			; set	2,	H
	set2.l			; set	2,	L
	set3*hl			; set	3,	[HL]
	set3*ix	$aa		; set	3,	[IX+$aa]
	set3*iy	$aa		; set	3,	[IY+$aa]
	set3.a			; set	3,	A
	set3.b			; set	3,	B
	set3.c			; set	3,	C
	set3.d			; set	3,	D
	set3.e			; set	3,	E
	set3.h			; set	3,	H
	set3.l			; set	3,	L
	set4*hl			; set	4,	[HL]
	set4*ix	$aa		; set	4,	[IX+$aa]
	set4*iy	$aa		; set	4,	[IY+$aa]
	set4.a			; set	4,	A
	set4.b			; set	4,	B
	set4.c			; set	4,	C
	set4.d			; set	4,	D
	set4.e			; set	4,	E
	set4.h			; set	4,	H
	set4.l			; set	4,	L
	set5*hl			; set	5,	[HL]
	set5*ix	$aa		; set	5,	[IX+$aa]
	set5*iy	$aa		; set	5,	[IY+$aa]
	set5.a			; set	5,	A
	set5.b			; set	5,	B
	set5.c			; set	5,	C
	set5.d			; set	5,	D
	set5.e			; set	5,	E
	set5.h			; set	5,	H
	set5.l			; set	5,	L
	set6*hl			; set	6,	[HL]
	set6*ix	$aa		; set	6,	[IX+$aa]
	set6*iy	$aa		; set	6,	[IY+$aa]
	set6.a			; set	6,	A
	set6.b			; set	6,	B
	set6.c			; set	6,	C
	set6.d			; set	6,	D
	set6.e			; set	6,	E
	set6.h			; set	6,	H
	set6.l			; set	6,	L
	set7*hl			; set	7,	[HL]
	set7*ix	$aa		; set	7,	[IX+$aa]
	set7*iy	$aa		; set	7,	[IY+$aa]
	set7.a			; set	7,	A
	set7.b			; set	7,	B
	set7.c			; set	7,	C
	set7.d			; set	7,	D
	set7.e			; set	7,	E
	set7.h			; set	7,	H
	set7.l			; set	7,	L

:sla	sla*hl			; sla	[HL]
	sla*ix	$aa		; sla	[IX+$aa]
	sla*iy	$aa		; sla	[IY+$aa]
	sla.a			; sla	A
	sla.b			; sla	B
	sla.c			; sla	C
	sla.d			; sla	D
	sla.e			; sla	E
	sla.h			; sla	H
	sla.l			; sla	L

:sra	sra*hl			; sra	[HL]
	sra*ix	$aa		; sra	[IX+$aa]
	sra*iy	$aa		; sra	[IY+$aa]
	sra.a			; sra	A
	sra.b			; sra	B
	sra.c			; sra	C
	sra.d			; sra	D
	sra.e			; sra	E
	sra.h			; sra	H
	sra.l			; sra	L

:srl	srl*hl			; srl	[HL]
	srl*ix	$aa		; srl	[IX+$aa]
	srl*iy	$aa		; srl	[IY+$aa]
	srl.a			; srl	A
	srl.b			; srl	B
	srl.c			; srl	C
	srl.d			; srl	D
	srl.e			; srl	E
	srl.h			; srl	H
	srl.l			; srl	L

:sub	sub*hl			; sub	A, 	[HL]
	sub*ix	$aa		; sub	A,	[IX+$aa]
	sub*iy	$aa		; sub	A,	[IY+$aa]
	sub	$aa		; sub	A,	$aa
	sub.a			; sub	A,	A
	sub.b			; sub	A,	B
	sub.c			; sub	A,	C
	sub.d			; sub	A,	D
	sub.e			; sub	A,	E
	sub.h			; sub	A,	H
	sub.l			; sub	A,	L
	sub.ixh			; sub	A,	IXH
	sub.ixl			; sub	A,	IXL
	sub.iyh			; sub	A,	IYH
	sub.iyl			; sub	A,	IYL

:xor	xor*hl			; xor	A, 	[HL]
	xor*ix	$aa		; xor	A,	[IX+$aa]
	xor*iy	$aa		; xor	A,	[IY+$aa]
	xor	$aa		; xor	A,	$aa
	xor.a			; xor	A,	A
	xor.b			; xor	A,	B
	xor.c			; xor	A,	C
	xor.d			; xor	A,	D
	xor.e			; xor	A,	E
	xor.h			; xor	A,	H
	xor.l			; xor	A,	L
	xor.ixh			; xor	A,	IXH
	xor.ixl			; xor	A,	IXL
	xor.iyh			; xor	A,	IYH
	xor.iyl			; xor	A,	IYL
