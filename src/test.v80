;v80 test file
;
;labels can start with numbers and are
;limited to 31 chars, including the sigil
;
:234567890123456789012345678901
	;
	; v80			; z80
	adc*hl			; adc	A,	[HL]
	adc*ix	$aa		; adc	A,	[IX+$aa]
	adc*iy	$aa		; adc	A,	[IY+$aa]
	adc	$aa		; adc	A,	$aa
	adc.a			; adc	A,	A
	adc.b			; adc	A,	B
	adc.c			; adc	A,	C
	adc.d			; adc	A,	D
	adc.e			; adc	A,	E
	adc.h			; adc	A,	H
	adc.l			; adc	A,	L
	adc.ixl			; adc	A,	IXY
	adc.ixh			; adc	A,	IXH
	adc.iyl			; adc	A,	IYL
	adc.iyh			; adc	A,	IYH
	adc.hl+bc		; adc	HL,	BC
	adc.hl+de		; adc	HL,	DE
	adc.hl+hl		; adc	HL,	HL
	adc.hl+sp		; adc	HL,	SP

	add*hl			; add	A,	[HL]
	add*ix	$aa		; add	A,	[IX+$aa]
	add*iy	$aa		; add	A,	[IY+$aa]
	add	$aa		; add	A,	$aa
	add.a			; add	A,	A
	add.b			; add	A,	B
	add.c			; add	A,	C
	add.d			; add	A,	D
	add.e			; add	A,	E
	add.h			; add	A,	H
	add.l			; add	A,	L
	add.ixl			; add	A,	IXY
	add.ixh			; add	A,	IXH
	add.iyl			; add	A,	IYL
	add.iyh			; add	A,	IYH
	add.hl+bc		; add	HL,	BC
	add.hl+de		; add	HL,	DE
	add.hl+hl		; add	HL,	HL
	add.hl+sp		; add	HL,	SP
	add.ix+bc		; add	IX,	BC
	add.ix+de		; add	IX,	DE
	add.ix+ix		; add	IX,	IX
	add.ix+sp		; add	IX,	SP
	add.iy+bc		; add	IY,	BC
	add.iy+de		; add	IY,	DE
	add.iy+iy		; add	IY,	IY
	add.iy+sp		; add	IY,	SP

	and*hl			; and	A,	[HL]
	and*ix	$aa		; and	A,	[IX+$aa]
	and*iy	$aa		; and	A,	[IY+$aa]
	and	$aa		; and	A,	$aa
	and.a			; and	A,	A
	and.b			; and	A,	B
	and.c			; and	A,	C
	and.d			; and	A,	D
	and.e			; and	A,	E
	and.h			; and	A,	H
	and.l			; and	A,	L
	and.ixl			; and	A,	IXL
	and.ixh			; and	A,	IXH
	and.iyl			; and	A,	IYL
	and.iyh			; and	A,	IYH

	bit0*hl			; bit	0,	[HL]
	bit0*ix	$aa		; bit	0,	[IX+$aa]
	bit0*iy	$aa		; bit	0,	[IY+$aa]
	bit0.a			; bit	0,	A
	bit0.b			; bit	0,	B
	bit0.c			; bit	0,	C
	bit0.d			; bit	0,	D
	bit0.e			; bit	0,	E
	bit0.h			; bit	0,	H
	bit0.l			; bit	0,	L
	bit1*hl			; bit	1,	[HL]
	bit1*ix	$aa		; bit	1,	[IX+$aa]
	bit1*iy	$aa		; bit	1,	[IY+$aa]
	bit1.a			; bit	1,	A
	bit1.b			; bit	1,	B
	bit1.c			; bit	1,	C
	bit1.d			; bit	1,	D
	bit1.e			; bit	1,	E
	bit1.h			; bit	1,	H
	bit1.l			; bit	1,	L
	bit2*hl			; bit	2,	[HL]
	bit2*ix	$aa		; bit	2,	[IX+$aa]
	bit2*iy	$aa		; bit	2,	[IY+$aa]
	bit2.a			; bit	2,	A
	bit2.b			; bit	2,	B
	bit2.c			; bit	2,	C
	bit2.d			; bit	2,	D
	bit2.e			; bit	2,	E
	bit2.h			; bit	2,	H
	bit2.l			; bit	2,	L
	bit3*hl			; bit	3,	[HL]
	bit3*ix	$aa		; bit	3,	[IX+$aa]
	bit3*iy	$aa		; bit	3,	[IY+$aa]
	bit3.a			; bit	3,	A
	bit3.b			; bit	3,	B
	bit3.c			; bit	3,	C
	bit3.d			; bit	3,	D
	bit3.e			; bit	3,	E
	bit3.h			; bit	3,	H
	bit3.l			; bit	3,	L
	bit4*hl			; bit	4,	[HL]
	bit4*ix	$aa		; bit	4,	[IX+$aa]
	bit4*iy	$aa		; bit	4,	[IY+$aa]
	bit4.a			; bit	4,	A
	bit4.b			; bit	4,	B
	bit4.c			; bit	4,	C
	bit4.d			; bit	4,	D
	bit4.e			; bit	4,	E
	bit4.h			; bit	4,	H
	bit4.l			; bit	4,	L
	bit5*hl			; bit	5,	[HL]
	bit5*ix	$aa		; bit	5,	[IX+$aa]
	bit5*iy	$aa		; bit	5,	[IY+$aa]
	bit5.a			; bit	5,	A
	bit5.b			; bit	5,	B
	bit5.c			; bit	5,	C
	bit5.d			; bit	5,	D
	bit5.e			; bit	5,	E
	bit5.h			; bit	5,	H
	bit5.l			; bit	5,	L
	bit6*hl			; bit	6,	[HL]
	bit6*ix	$aa		; bit	6,	[IX+$aa]
	bit6*iy	$aa		; bit	6,	[IY+$aa]
	bit6.a			; bit	6,	A
	bit6.b			; bit	6,	B
	bit6.c			; bit	6,	C
	bit6.d			; bit	6,	D
	bit6.e			; bit	6,	E
	bit6.h			; bit	6,	H
	bit6.l			; bit	6,	L
	bit7*hl			; bit	7,	[HL]
	bit7*ix	$aa		; bit	7,	[IX+$aa]
	bit7*iy	$aa		; bit	7,	[IY+$aa]
	bit7.a			; bit	7,	A
	bit7.b			; bit	7,	B
	bit7.c			; bit	7,	C
	bit7.d			; bit	7,	D
	bit7.e			; bit	7,	E
	bit7.h			; bit	7,	H
	bit7.l			; bit	7,	L

	call	$		; call	$1234
	call?z	$		; call	z,	$1234
	call?c	$		; call	c,	$1234
	call?m	$		; call	m,	$1234
	call?p	$		; call	p,	$1234
	call?po	$		; call	po,	$1234
	call?pe	$		; call	pe,	$1234
	call?nz	$		; call	nz,	$1234
	call?nc	$		; call	nz,	$1234

	ccf			; ccf

	cp*hl			; cp	A,	[HL]
	cp*ix	$aa		; cp	A,	[IX+$aa]
	cp*iy	$aa		; cp	A,	[IY+$aa]
	cp	$aa		; cp	A,	$aa
	cp.a			; cp	A,	A
	cp.b			; cp	A,	B
	cp.c			; cp	A,	C
	cp.d			; cp	A,	D
	cp.e			; cp	A,	E
	cp.h			; cp	A,	H
	cp.l			; cp	A,	L
	cp.ixl			; cp	A,	IXL
	cp.ixh			; cp	A,	IXH
	cp.iyl			; cp	A,	IYL
	cp.iyh			; cp	A,	IYH

	cpd			; cpd
	cpdr			; cpdr

	cpi			; cpi
	cpir			; cpir

	cpl			; cpl

	daa			; daa

	dec*hl			; dec	[HL]
	dec*ix	$aa		; dec	[IX+$aa]
	dec*iy	$aa		; dec	[IY+$aa]
	dec.a			; dec	A
	dec.b			; dec	B
	dec.c			; dec	C
	dec.d			; dec	D
	dec.e			; dec	E
	dec.h			; dec	H
	dec.l			; dec	L
	dec.ixl			; dec	IXL
	dec.ixh			; dec	IXH
	dec.iyl			; dec	IYL
	dec.iyh			; dec	IYH
	dec.bc			; dec	BC
	dec.de			; dec	DE
	dec.hl			; dec	HL
	dec.ix			; dec	IX
	dec.iy			; dec	IY
	dec.sp			; dec	SP

	di			; di

	djnz	$		; djnz	$1234

	ei			; ei

	ex*sp.hl		; ex	[SP],	HL
	ex*sp.ix		; ex	[SP],	IX
	ex*sp.iy		; ex	[SP],	IY
	ex.af.af		; ex	AF,	AF
	ex.de.hl		; ex	DE,	HL
	exx			; exx

	halt			; halt
