; v80, (C) Kroc Camen 2023-2024, MIT License
; 6502 ISA opcode tree
;
; opcode flags byte:
;===============================================================================
; the opcode-flags byte that follows the opcode describes the parameters used:
;
; bit 0 indicates an immediate, 8-bit parameter
;
; bit 1 is combined with bit 0 to indicate a 16-bit immediate parameter
;
; bit 2 indicates a relative jump. bit 0 is expected to be set as well
;
#OP             %00000000               ; implied, no parameters
#OP_B           %00000001               ; immediate, 8-bit
#OP_W           %00000011               ; immediate, 16-bits
#OP_R           %00000101               ; relative-jump


:opcodes
;===============================================================================
.w      :a                              ; a..?
.w      :b                              ; b..?
.w      :c                              ; c..?
.w      :d                              ; d..?
.w      :x                              ; (eor is alias for xor) 
.w      $0000                           ; (no f.. instructions)
.w      $0000                           ; (no g.. instructions)
.w      $0000                           ; (no h.. instructions)
.w      :i                              ; i..?
.w      :j                              ; j..?
.w      $0000                           ; (no k.. instructions)
.w      :l                              ; l..?
.w      $0000                           ; (no m.. instructions)
.w      :n                              ; n..?
.w      :o                              ; o..?
.w      :p                              ; p..?
.w      $0000                           ; (no q.. instructions)
.w      :r                              ; r..?
.w      :s                              ; s..?
.w      :t                              ; t..?
.w      $0000                           ; (no u.. instructions)
.w      $0000                           ; (no v.. instructions)
.w      $0000                           ; (no w.. instructions)
.w      :x                              ; x..?
.w      $0000                           ; (no y.. instructions)
.w      $0000                           ; (no z.. instructions)

:a
;===============================================================================
.b      2 *16 | 1  "dc"         $69 #OP_B       ; 69 nn    | adc     $nn
.b      2 *16 | 3    ".z"       $65 #OP_B       ; 65 nn    | adc.z   $nn
.b      2 *16 | 5      ".x"     $75 #OP_B       ; 75 nn    | adc.z.x $nn
.b      2 *16 | 4     "x*"      $7d #OP_W       ; 7D nn nn | adc.x*  $nnnn
.b      2 *16 | 4     "y*"      $79 #OP_W       ; 79 nn nn | adc.y*  $nnnn
.b      1 *16 | 6       "z"     $71 #OP_B       ; 71 nn    | adc.y*z $nn
.b      1 *16 | 3    "*"        $6d #OP_W       ; 6D nn nn | adc*    $nnnn
.b      3 *16 | 4     "z.x"     $61 #OP_B       ; 61 nn    | adc*z.x $nn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "nd"         $29 #OP_B       ; 29 nn    | and     $nn
.b      2 *16 | 3    ".z"       $25 #OP_B       ; 25 nn    | and.z   $nn
.b      2 *16 | 5      ".x"     $35 #OP_B       ; 35 nn    | and.z.x $nn
.b      2 *16 | 4     "x*"      $3d #OP_W       ; 3D nn nn | and.x*  $nnnn
.b      2 *16 | 4     "y*"      $39 #OP_W       ; 39 nn nn | and.y*  $nnnn
.b      1 *16 | 6       "z"     $31 #OP_B       ; 31 nn    | and.y*z $nn
.b      1 *16 | 3    "*"        $2d #OP_W       ; 2D nn nn | and*    $nnnn
.b      3 *16 | 4      "z.x"    $21 #OP_B       ; 21 nn    | and*z.x $nn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "sl"         $0a #OP         ; 0A       | asl
.b      2 *16 | 3    ".z"       $06 #OP_B       ; 06 nn    | asl.z   $nn
.b      2 *16 | 5      ".x"     $16 #OP_B       ; 16 nn    | asl.z.x $nn
.b      2 *16 | 4     "x*"      $1e #OP_W       ; 1E nn nn | asl.x*  $nnnn
.b      1 *16 | 3    "*"        $0e #OP_W       ; 0E nn nn | asl*    $nnnn
;-------------------------------------------------------------------------------
.b      0

:b
;===============================================================================
.b      2 *16 | 1  "eq"         $f0 #OP_R       ; F0 nn    | beq     $nnnn
.b      2 *16 | 1  "ne"         $d0 #OP_R       ; D0 nn    | bne     $nnnn
.b      2 *16 | 1  "cc"         $90 #OP_R       ; 90 nn    | bcc     $nnnn
.b      1 *16 | 2   "s"         $b0 #OP_R       ; B0 nn    | bcs     $nnnn
.b      2 *16 | 1  "mi"         $30 #OP_R       ; 30 nn    | bmi     $nnnn
.b      2 *16 | 1  "pl"         $10 #OP_R       ; 10 nn    | bpl     $nnnn
.b      2 *16 | 1  "vc"         $50 #OP_R       ; 50 nn    | bvc     $nnnn
.b      1 *16 | 2   "s"         $70 #OP_R       ; 70 nn    | bvs     $nnnn
;-------------------------------------------------------------------------------
.b      3 *16 | 1  "it*"        $2c #OP_W       ; 2C nn nn | bit*    $nnnn
.b      2 *16 | 3    ".z"       $24 #OP_B       ; 24 nn    | bit.z   $nn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "rk"         $00 #OP         ; 00       | brk
;-------------------------------------------------------------------------------
.b      0

:c
;===============================================================================
.b      2 *16 | 1  "mp"         $c9 #OP_B       ; C9 nn    | cmp     $nn
.b      2 *16 | 3    ".z"       $c5 #OP_B       ; C5 nn    | cmp.z   $nn
.b      2 *16 | 5      ".x"     $d5 #OP_B       ; D5 nn    | cmp.z.x $nn
.b      2 *16 | 4     "x*"      $dd #OP_W       ; DD nn nn | cmp.x*  $nnnn
.b      2 *16 | 4     "y*"      $d9 #OP_W       ; D9 nn nn | cmp.y*  $nnnn
.b      1 *16 | 6       "z"     $d1 #OP_B       ; D1 nn    | cmp.y*z $nn
.b      1 *16 | 3    "*"        $cd #OP_W       ; CD nn nn | cmp*    $nnnn
.b      3 *16 | 4     "z.x"     $c1 #OP_B       ; C1 nn    | cmp*z.x $nn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "px"         $e0 #OP_B       ; E0 nn    | cpx     $nn
.b      2 *16 | 3    ".z"       $e4 #OP_B       ; E4 nn    | cpx.z   $nn
.b      1 *16 | 3    "*"        $ec #OP_W       ; EC nn nn | cpx*    $nnnn
;-------------------------------------------------------------------------------
.b      1 *16 | 2   "y"         $c0 #OP_B       ; C0 nn    | cpy     $nn
.b      2 *16 | 3    ".z"       $c4 #OP_B       ; C4 nn    | cpy.z   $nn
.b      1 *16 | 3    "*"        $cc #OP_W       ; CC nn nn | cpy*    $nnnn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "lc"         $18 #OP         ; 18       | clc
.b      1 *16 | 2   "i"         $58 #OP         ; 58       | cli
.b      1 *16 | 2   "d"         $d8 #OP         ; D8       | cld
.b      1 *16 | 2   "v"         $b8 #OP         ; B8       | clv
;-------------------------------------------------------------------------------
.b      0

:d
;===============================================================================
.b      2 *16 | 1  "ex"         $ca #OP         ; CA       | dex
.b      1 *16 | 2   "y"         $88 #OP         ; 88       | dey
;-------------------------------------------------------------------------------
.b      2 *16 | 2   "c*"        $ce #OP_W       ; CE nn nn | dec*    $nnnn
.b      2 *16 | 3    ".z"       $c6 #OP_B       ; C6 nn    | dec.z   $nn
.b      2 *16 | 5      ".x"     $d6 #OP_B       ; D6 nn    | dec.z.x $nn
.b      2 *16 | 4     "x*"      $de #OP_W       ; DE nn nn | dec.x*  $nnnn
;-------------------------------------------------------------------------------
.b      0

:i
;===============================================================================
.b      2 *16 | 1  "nx"         $e8 #OP         ; E8       | inx
.b      1 *16 | 2   "y"         $c8 #OP         ; C8       | iny
;-------------------------------------------------------------------------------
.b      2 *16 | 2   "c*"        $ee #OP_W       ; EE nn nn | inc*    $nnnn
.b      2 *16 | 3    ".z"       $e6 #OP_B       ; E6 nn    | inc.z   $nn
.b      2 *16 | 5      ".x"     $f6 #OP_B       ; F6 nn    | inc.z.x $nn
.b      2 *16 | 4     "x*"      $fe #OP_W       ; FE nn nn | inc.x*  $nnnn
;-------------------------------------------------------------------------------
.b      0

:j
;===============================================================================
.b      2 *16 | 1  "sr"         $20 #OP_W       ; 20 nn nn | jsr     $nnnn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "mp"         $4c #OP_W       ; 4C nn nn | jmp     $nnnn
.b      1 *16 | 3    "*"        $6c #OP_W       ; 6C nn nn | jmp*    $nnnn
;-------------------------------------------------------------------------------
.b      0

:l
;===============================================================================
.b      2 *16 | 1  "da"         $a9 #OP_B       ; A9 nn    | lda     $nn
.b      1 *16 | 3    "*"        $ad #OP_W       ; AD nn nn | lda*    $nnnn
.b      3 *16 | 4     "z.x"     $a1 #OP_B       ; A1 nn    | lda*z.x $nn
.b      2 *16 | 3    ".z"       $a5 #OP_B       ; A5 nn    | lda.z   $nn
.b      2 *16 | 5      ".x"     $b5 #OP_B       ; B5 nn    | lda.z.x $nn
.b      2 *16 | 4     "x*"      $bd #OP_W       ; BD nn nn | lda.x*  $nnnn
.b      2 *16 | 4     "y*"      $b9 #OP_W       ; BD nn nn | lda.y*  $nnnn
.b      1 *16 | 6       "z"     $b1 #OP_B       ; B1 nn    | lda.y*z $nn
;-------------------------------------------------------------------------------
.b      1 *16 | 2   "x"         $a2 #OP_B       ; A2 nn    | ldx     $nn
.b      1 *16 | 3    "*"        $ae #OP_W       ; AE nn nn | ldx*    $nnnn
.b      2 *16 | 3    ".z"       $a6 #OP_B       ; A6 nn    | ldx.z   $nn
.b      2 *16 | 5      ".y"     $b6 #OP_B       ; B6 nn    | ldx.z.y $nn
.b      2 *16 | 4     "y*"      $be #OP_W       ; BE nn nn | ldx.y*  $nnnn
;-------------------------------------------------------------------------------
.b      1 *16 | 2   "y"         $a0 #OP_B       ; A0 nn    | ldy     $nn
.b      1 *16 | 3    "*"        $ac #OP_W       ; AC nn nn | ldy*    $nnnn
.b      2 *16 | 3    ".z"       $a4 #OP_B       ; A4 nn    | ldy.z   $nn
.b      2 *16 | 5      ".x"     $b4 #OP_B       ; B4 nn    | ldy.z.x $nn
.b      2 *16 | 4     "x*"      $bc #OP_W       ; BC nn nn | ldy.x*  $nnnn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "sr"         $4a #OP         ; 4A       | lsr
.b      1 *16 | 3    "*"        $4e #OP_W       ; 4E nn nn | lsr     $nnnn
.b      2 *16 | 3    ".z"       $46 #OP_B       ; 46 nn    | lsr.z   $nn
.b      2 *16 | 5      ".x"     $56 #OP_B       ; 56 nn    | lsr.z.x $nn
.b      2 *16 | 4     "x*"      $5e #OP_W       ; 5E nn nn | lsr.x*  $nnnn
;-------------------------------------------------------------------------------
.b      0

:n
;===============================================================================
.b      2 *16 | 1  "op"         $ea #OP         ; EA       | nop
;-------------------------------------------------------------------------------
.b      0

:o
;===============================================================================
.b      2 *16 | 1  "ra"         $09 #OP_B       ; 09 nn    | ora     $nn
.b      2 *16 | 3    ".z"       $05 #OP_B       ; 05 nn    | ora.z   $nn
.b      2 *16 | 5      ".x"     $15 #OP_B       ; 15 nn    | ora.z.x $nn
.b      2 *16 | 4     "x*"      $1d #OP_W       ; 1D nn nn | ora.x*  $nnnn
.b      2 *16 | 4     "y*"      $19 #OP_W       ; 19 nn nn | ora.y*  $nnnn
.b      1 *16 | 6       "z"     $11 #OP_B       ; 11 nn    | ora.y*z $nn
.b      1 *16 | 3    "*"        $0d #OP_W       ; 0D nn nn | ora*    $nnnn
.b      3 *16 | 4     "z.x"     $01 #OP_B       ; 01 nn    | ora*z.x $nn
;-------------------------------------------------------------------------------
.b      0

:p
;===============================================================================
.b      2 *16 | 1  "ha"         $48 #OP         ; 48       | pha
.b      1 *16 | 2   "p"         $08 #OP         ; 08       | php
.b      2 *16 | 1  "la"         $68 #OP         ; 68       | pla
.b      1 *16 | 2   "p"         $28 #OP         ; 28       | plp
;-------------------------------------------------------------------------------
.b      0

:r
;===============================================================================
.b      2 *16 | 1  "ts"         $60 #OP         ; 60       | rts
.b      1 *16 | 2   "i"         $40 #OP         ; 40       | rti
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "ol"         $2a #OP         ; 2A       | rol
.b      2 *16 | 3    ".z"       $26 #OP_B       ; 26 nn    | rol.z   $nn
.b      2 *16 | 5      ".x"     $36 #OP_B       ; 36 nn    | rol.z.x $nn
.b      2 *16 | 4     "x*"      $3e #OP_W       ; 3E nn nn | rol.x*  $nnnn
.b      1 *16 | 3    "*"        $2e #OP_W       ; 2E nn nn | rol*    $nnnn
;-------------------------------------------------------------------------------
.b      1 *16 | 2   "r"         $6a #OP         ; 6A       | ror
.b      2 *16 | 3    ".z"       $66 #OP_B       ; 66 nn    | ror.z   $nn
.b      2 *16 | 5      ".x"     $76 #OP_B       ; 76 nn    | ror.z.x $nn
.b      2 *16 | 4     "x*"      $7e #OP_W       ; 7E nn nn | ror.x*  $nnnn
.b      1 *16 | 3    "*"        $6e #OP_W       ; 6E nn nn | ror*    $nnnn
;-------------------------------------------------------------------------------
.b      0

:s
;===============================================================================
.b      4 *16 | 1  "ta.z"       $85 #OP_B       ; 85 nn    | sta.z   $nn
.b      2 *16 | 5      ".x"     $95 #OP_B       ; 95 nn    | sta.z.x $nn
.b      2 *16 | 4     "x*"      $9d #OP_W       ; 9D nn nn | sta.x*  $nnnn
.b      2 *16 | 4     "y*"      $99 #OP_W       ; 99 nn nn | sta.y*  $nnnn
.b      1 *16 | 6       "z"     $91 #OP_B       ; 91 nn    | sta.y*z $nn
.b      1 *16 | 3    "*"        $8d #OP_W       ; 8D nn nn | sta*    $nnnn
.b      3 *16 | 4     "z.x"     $81 #OP_B       ; 81 nn    | sta*z.x $nn
;-------------------------------------------------------------------------------
.b      3 *16 | 2   "x.z"       $86 #OP_B       ; 86 nn    | stx.z   $nn
.b      2 *16 | 5      ".y"     $96 #OP_B       ; 96 nn    | stx.z.y $nn
.b      1 *16 | 3    "*"        $8e #OP_W       ; 8E nn nn | stx*    $nnnn
;-------------------------------------------------------------------------------
.b      3 *16 | 2   "y.z"       $84 #OP_B       ; 84 nn    | sty.z   $nn
.b      2 *16 | 5      ".x"     $94 #OP_B       ; 94 nn    | sty.z.x $nn
.b      1 *16 | 3    "*"        $8c #OP_W       ; 8C nn nn | sty*    $nnnn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "bc"         $e9 #OP_B       ; E9 nn    | sbc     $nn
.b      2 *16 | 3    ".z"       $e5 #OP_B       ; E5 nn    | sbc.z   $nn
.b      2 *16 | 5      ".x"     $f5 #OP_B       ; F5 nn    | sbc.z.x $nn
.b      2 *16 | 4     "x*"      $fd #OP_W       ; FD nn nn | sbc.x*  $nnnn
.b      2 *16 | 4     "y*"      $f9 #OP_W       ; F9 nn nn | sbc.y*  $nnnn
.b      1 *16 | 6       "z"     $f1 #OP_B       ; F1 nn    | sbc.y*z $nn
.b      1 *16 | 3    "*"        $ed #OP_W       ; ED nn nn | sbc*    $nnnn
.b      3 *16 | 4     "z.x"     $e1 #OP_B       ; E1 nn    | sbc*z.x $nn
;-------------------------------------------------------------------------------
.b      2 *16 | 1  "ec"         $38 #OP         ; 38       | sec
.b      1 *16 | 2   "i"         $78 #OP         ; 78       | sei
.b      1 *16 | 2   "d"         $f8 #OP         ; F8       | sed
;-------------------------------------------------------------------------------
.b      0

:t
;===============================================================================
.b      2 *16 | 1  "ax"         $aa #OP         ; AA       | tax
.b      1 *16 | 2   "y"         $a8 #OP         ; A8       | tay
.b      2 *16 | 1  "ya"         $98 #OP         ; 98       | tya
.b      2 *16 | 1  "xa"         $8a #OP         ; 8A       | txa
.b      1 *16 | 2   "s"         $9a #OP         ; 9A       | txs
.b      2 *16 | 1  "sx"         $ba #OP         ; BA       | tsx
;-------------------------------------------------------------------------------
.b      0

:x
;===============================================================================
.b      2 *16 | 1  "or"         $49 #OP_B       ; 49 nn    | xor     $nn
.b      1 *16 | 3    "*"        $4d #OP_W       ; 4D nn nn | xor*    $nnnn
.b      3 *16 | 4     "z.x"     $41 #OP_B       ; 41 nn    | xor*z.x $nn
.b      2 *16 | 3    ".z"       $45 #OP_B       ; 45 nn    | xor.z   $nn
.b      2 *16 | 5      ".x"     $55 #OP_B       ; 55 nn    | xor.z.x $nn
.b      2 *16 | 4     "x*"      $5d #OP_W       ; 5D nn nn | xor.x*  $nnnn
.b      2 *16 | 4     "y*"      $59 #OP_W       ; 59 nn nn | xor.y*  $nnnn
.b      1 *16 | 6       "z"     $51 #OP_B       ; 51 nn    | xor.y*z $nn
;-------------------------------------------------------------------------------
.b      0

#size_of_opcodes        $ - :opcodes